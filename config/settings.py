"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
import whitenoise
from datetime import timedelta
from pathlib import Path
from django.conf import settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0od93l^2!nr8fyb0d^e9zo%5&vle#$4fqxovk)0rw-i103tw#r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

DEBUG_TOOLBAR_CONFIG = {
    'SHOW_TOOLBAR_CALLBACK': lambda request: DEBUG,
    'DISABLE_PANELS': (
        'debug_toolbar.panels.redirects.RedirectsPanel',
        'debug_toolbar.panels.profiling.ProfilingPanel',
    ),
    'JQUERY_URL': '', 
}


# ALLOWED_HOSTS = ["pyblog.uz", "http://pyblog.uz", "https://pyblog.uz", "www.pyblog.uz"]
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django_quill",
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
    "debug_toolbar",
    'drf_spectacular',
    'drf_yasg',
    'silk',
    "blog",
    'api'
]

PRIVATE_MEDIA_SERVER = 'api.views.custom_serve_media'

SPECTACULAR_SETTINGS = {
    'TITLE': 'Pyblog API Documentation',
    'DESCRIPTION': 'This API provides endpoints for interacting with our service.',
    'VERSION': '1.0.0',
    'SCHEMA_PATH_PREFIX': r'/api/v1',
    'SERVE_INCLUDE_SCHEMA': False,
    'SERVE_PUBLIC': False,
    'COMPONENT_SPLIT_REQUEST': True,
    'COMPONENT_SPLIT_RESPONSE': True,
    'COMPONENT_SPLIT_PAGINATION': True,
    'COMPONENT_SPLIT_PARAMETERS': True,
    'COMPONENT_SPLIT_SECURITY': True,
    'VALIDATE_REQUEST_BODY': True,
    'VALIDATE_RESPONSE_BODY': True,
    'DEFAULT_GENERATOR_CLASS': 'drf_spectacular.generators.SchemaGenerator',
    'DEFAULT_AUTO_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_FIELD_INSPECTORS': [
        'drf_spectacular.inspectors.CamelCaseJSONFilter',
        'drf_spectacular.inspectors.ExcludeSerializerDefault',
        'drf_spectacular.inspectors.SortedParameterInspector',
        'drf_spectacular.inspectors.RecursiveFieldInspector',
    ],
    'DEFAULT_FILTER_INSPECTORS': [
        'drf_spectacular.inspectors.DjangoFilterInspector',
        'drf_spectacular.inspectors.CoreAPICompatInspector',
    ],
    'DEFAULT_PATH_PARAM_INSPECTORS': [
        'drf_spectacular.inspectors.CamelCaseJSONFilter',
    ],
    'DEFAULT_REQUEST_TRANSFORMERS': [
        'drf_spectacular.plumbing.OptionalPaginationTransformer',
    ],
    'DEFAULT_RESPONSE_TRANSFORMERS': [
        'drf_spectacular.plumbing.OptionalPaginationTransformer',
    ],

}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'api.middleware.HSTSMiddleware'
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.AllowAny',

    ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 2,

}


CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  
    "http://127.0.0.1:8000",   
    'https://pyblog.vercel.app',
    "http://localhost:5000",   

]


CSP_HEADER = {
    'default-src': ["'self'", "'unsafe-inline'", "'unsafe-eval'", "*"],
    'script-src': ["'self'", "'unsafe-inline'", "'unsafe-eval'", "*"],
    'style-src': ["'self'", "'unsafe-inline'", "'unsafe-eval'", "*"],
    'img-src': ["'self'", "'unsafe-inline'", "'unsafe-eval'", "*"],
    'font-src': ["'self'", "'unsafe-inline'", "'unsafe-eval'", "*"],
    'frame-src': ["'self'", "'unsafe-inline'", "'unsafe-eval'", "*"],
    'object-src': ["'self'", "'unsafe-inline'", "'unsafe-eval'", "*"],
}

X_FRAME_OPTIONS = 'ALLOWALL'




ROOT_URLCONF = 'config.urls'
HOST = "https://pyblog.uz"
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.context_pro.get_all',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




#SIMPLE JWT
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=10),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=14),
    'SLIDING_TOKEN_LIFETIME': timedelta(days=14),
    'ROTATE_REFRESH_TOKENS': False,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',
    'SLIDING_REFRESH_TOKEN_CLAIM': 'refresh_sliding',
    'SLIDING_REFRESH_TOKEN_LIFETIME': timedelta(days=14),
    'SLIDING_REFRESH_TOKEN_REFRESH_LIFETIME': timedelta(days=28),
}


#COOKIES
SESSION_COOKIE_NAME = "session_cookie"
SESSION_COOKIE_AGE = 1209600  
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'



#LOGGING
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/file.log',
        },
    },
    'loggers': {
        '': {
            'handlers': ['file'],
            'level': 'DEBUG',
        },
    },
}


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
# STATIC_URL = '/pybloguz/static/'
# STATIC_ROOT = '/home/pybloguz/public_html/pybloguz/static/'
# MEDIA_URL = '/pybloguz/mediafiles/'
# MEDIA_ROOT = '/home/pybloguz/public_html/pybloguz/mediafiles/'


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/mediafiles/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static') ,  
]



# STATICFILES_DIRS = '/home/pybloguz/public_html/pybloguz/static/' 

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



QUILL_CONFIGS = {
    'default':{
        'theme': 'snow',
        'modules': {
            'syntax': True,
            'toolbar': 
                [
                ['bold', 'italic', 'underline', 'strike'],       
                ['blockquote', 'code-block','link', 'image'],
            
                [{ 'list': 'ordered'}, { 'list': 'bullet' }],    
                [{ 'indent': '-1'}, { 'indent': '+1' }],         
                        
                [{ 'header': [1, 2, 3, 4, 5, 6, False] }],
                [{ 'align': [] }],                                    
                ]
        }
    }
}
