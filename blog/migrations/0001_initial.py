# Generated by Django 3.2 on 2023-08-09 13:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_quill.fields
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('description', models.CharField(max_length=256, verbose_name='description')),
                ('link', models.CharField(max_length=256, verbose_name='link')),
                ('image', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format=None, keep_meta=True, quality=90, scale=None, size=[500, 500], upload_to='ads/%Y/%m', verbose_name='image')),
            ],
            options={
                'verbose_name': 'ad',
                'verbose_name_plural': 'ads',
                'db_table': 'ad',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('slug', models.SlugField(max_length=256, unique=True, verbose_name='slug')),
                ('icon', models.CharField(max_length=64, verbose_name='icon')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='InstagramPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='instagram_images/')),
                ('link', models.URLField(blank=True, max_length=256, verbose_name='URL')),
                ('likes', models.PositiveSmallIntegerField(default=0)),
                ('shares', models.PositiveSmallIntegerField(default=0)),
                ('comments', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('slug', models.SlugField(max_length=256, unique=True, verbose_name='slug')),
                ('icon', models.CharField(max_length=64, verbose_name='icon')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('slug', models.SlugField(max_length=256, unique=True, verbose_name='slug')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format=None, keep_meta=True, quality=90, scale=None, size=[1200, 800], upload_to='posts/%Y/%m', verbose_name='image')),
                ('icon', models.CharField(blank=True, max_length=256, verbose_name='icon')),
                ('is_top', models.BooleanField(db_index=True, default=False, verbose_name='post is top')),
                ('is_slider', models.BooleanField(db_index=True, default=False, verbose_name='post is slider')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='post is published')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='published date')),
                ('body', django_quill.fields.QuillField(verbose_name='body')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='views')),
                ('good', models.PositiveIntegerField(default=0, verbose_name='good')),
                ('like', models.PositiveIntegerField(default=0, verbose_name='like')),
                ('great', models.PositiveIntegerField(default=0, verbose_name='great')),
                ('excellent', models.PositiveIntegerField(default=0, verbose_name='excellent')),
                ('fire', models.PositiveIntegerField(default=0, verbose_name='fire')),
                ('legend', models.PositiveIntegerField(default=0, verbose_name='legend')),
                ('congrats', models.PositiveIntegerField(default=0, verbose_name='congrats')),
                ('neutral', models.PositiveIntegerField(default=0, verbose_name='neutral')),
                ('dislike', models.PositiveIntegerField(default=0, verbose_name='dislike')),
                ('reaction_count', models.PositiveIntegerField(blank=True, default=0)),
                ('comments_count', models.PositiveIntegerField(blank=True, default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blog.category', verbose_name='category')),
                ('saved', models.ManyToManyField(blank=True, related_name='saved_posts', to=settings.AUTH_USER_MODEL, verbose_name='saved')),
                ('tags', models.ManyToManyField(blank=True, db_index=True, related_name='posts', to='blog.Tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'db_table': 'post',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='text')),
                ('full_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='full name')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='published date')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='post')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'db_table': 'comment',
            },
        ),
    ]
